name: BuildRelease

on:
  push:
    branches:
      - master
      - rewrite
  schedule:
   - cron: '30 * * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      
    - id: set-version
      run: |
        version=$(cat ./VERSION | python -c 'import sys, json; f=open("./src/settings.json");print(json.loads(f.read())["version"])')
        echo "::set-output name=version::$version"

    - uses: actions/checkout@master
    - name: Get Atmosphere Latest Release
      id: Atmospherelatest_version
      uses: abatilo/release-info-action@v1.3.0
      with:
        owner: Atmosphere-NX
        repo: Atmosphere

    - uses: actions/checkout@master
    - name: Get Latest Release
      id: latest_version
      uses: abatilo/release-info-action@v1.3.0
      with:
        owner: kkkkyue
        repo: DeepSea
       
       
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9.6

    - name: Install dependencies
      run: |
        if [ -f ./requirements.txt ]; then pip3 install -r ./requirements.txt; fi
        
    - name: Create DeepSea Packages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: | 
        python ./build.py -gt="$GITHUB_TOKEN" -v="v${{ steps.set-version.outputs.version }}"
    
    - name: Create Release
      run: |
        wget https://github.com/qjfoidnh/BaiduPCS-Go/releases/download/v3.8.3/BaiduPCS-Go-v3.8.3-linux-amd64.zip
        unzip BaiduPCS-Go-v3.8.3-linux-amd64.zip
        chmod +x ./BaiduPCS-Go-v3.8.3-linux-amd64/BaiduPCS-Go
        cp ./BaiduPCS-Go-v3.8.3-linux-amd64/BaiduPCS-Go ./
        ./BaiduPCS-Go update
        ./BaiduPCS-Go login "bduss=${{ secrets.BDUSS }}"
        echo "bduss=$BDUSS"
        set -x
        assets=()
        for asset in ./*.zip; do
          assets+=("-a" "$asset")
          filename={$asset#*/}
          ./BaiduPCS-Go rm /Deepsea/"$filename"
          ./BaiduPCS-Go upload "$asset" /DeepSea
        done
        if [ $LASTTAG = "v${{ steps.set-version.outputs.version }}.$LATEST" ]; then hub release delete "v${{ steps.set-version.outputs.version }}.$LATEST"; fi
        hub release create "${assets[@]}"  -m "Release with Atmosphere $LATEST" "v${{ steps.set-version.outputs.version }}.$LATEST"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        LATEST: ${{ steps.Atmospherelatest_version.outputs.latest_tag }}
        LATEST_DATE: ${{ steps.Atmospherelatest_version.outputs.latest_tag_published_at }}
        LASTTAG: ${{ steps.latest_version.outputs.latest_tag }}
        BDUSS: ${{ secrets.BDUSS }}
