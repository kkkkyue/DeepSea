name: BuildRelease

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
   - cron: '0 12 * * *'

defaults:
  run:
    working-directory: src

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@master
    - name: Get Atmosphere Latest Release
      id: latest_version
      uses: abatilo/release-info-action@v1.3.3
      with:
        owner: Atmosphere-NX
        repo: Atmosphere

    - uses: actions/checkout@master
    - name: Get Latest Release
      id: my_latest_version
      uses: abatilo/release-info-action@v1.3.3
      with:
        owner: kkkkyue
        repo: DeepSea

    - uses: actions/checkout@v2
    - id: set-version
      run: |
        version=$(python -c 'import sys, json; f=open("./settings.json");print(json.loads(f.read())["releaseVersion"])')
        echo "::set-output name=version::$version"
        
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        if [ -f ../requirements.txt ]; then pip3 install -r ../requirements.txt; fi
        
    - name: Create DeepSea Packages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: | 
        python ./start.py -gt="$GITHUB_TOKEN"

    - name: Create Release
      run: |
        set -x
        assets=()
        for asset in ./*.zip; do
          assets+=("-a" "$asset")
        done
        file_path="./repo_tags.txt"
        file_content=$(cat "$file_path")
        if [ ${{ steps.my_latest_version.outputs.latest_tag }} = v${{ steps.latest_version.outputs.latest_tag }} ]; then hub release delete ${{ steps.my_latest_version.outputs.latest_tag }}; fi
        hub release create -m "$file_content" "${assets[@]}" "v${{ steps.latest_version.outputs.latest_tag }}"
    
    - name: release-downloader
    # You may pin to the exact commit or the version.
    # uses: robinraju/release-downloader@efa4cd07bd0195e6cc65e9e30c251b49ce4d3e51
      uses: robinraju/release-downloader@v1.8
      with:
        # The source repository path. Expected format {owner}/{repo}
        repository: qjfoidnh/BaiduPCS-Go # optional, default is ${{ github.repository }}
        # A flag to choose between latest release and remaining releases
        latest: true # optional, default is false
        # The github tag to download the release from
        #tag: # optional, default is 
        # Name of the file to download (use '*' to download all assets other than tarball or zipball)
        fileName: .*linux-arm64.*\\.zip # optional, default is *
        # Download tarball from assets
        #tarBall: # optional, default is false
        # Download zipball from assets
        zipBall: true # optional, default is false
        # Relative path under $GITHUB_WORKSPACE to place the downloaded files
        out-file-path: . # default is .
        # If the downladed assets should be extracted to `out-file-path`. Supports tar, tar.gz and zip
        extract: true # optional, default is false
        # Github token to access private repos
        #token: # optional, default is ${{ github.token }}
        # The URL of the Github API, only use this input if you are using Github Enterprise
        #github-api-url: # optional, default is https://api.github.com
        # The release id to download the file from
        #releaseId: # optional, default is 
        
    - name: baidupcs
      run: |
        BaiduPCS-Go update
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
