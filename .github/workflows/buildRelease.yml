name: BuildRelease

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
   - cron: '0 12 * * *'

defaults:
  run:
    working-directory: src

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@master
    - name: Get Atmosphere Latest Release
      id: latest_version
      uses: abatilo/release-info-action@v1.3.3
      with:
        owner: Atmosphere-NX
        repo: Atmosphere

    - uses: actions/checkout@master
    - name: Get Latest Release
      id: my_latest_version
      uses: abatilo/release-info-action@v1.3.3
      with:
        owner: kkkkyue
        repo: DeepSea

    - uses: actions/checkout@v2
    - id: set-version
      run: |
        version=$(python -c 'import sys, json; f=open("./settings.json");print(json.loads(f.read())["releaseVersion"])')
        echo "::set-output name=version::$version"
        
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        if [ -f ../requirements.txt ]; then pip3 install -r ../requirements.txt; fi
        
    - name: Create DeepSea Packages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: | 
        python ./start.py -gt="$GITHUB_TOKEN"

    - name: Create Release
      run: |
        set -x
        assets=()
        for asset in ./*.zip; do
          assets+=("-a" "$asset")
        done
        if [ ${{ steps.my_latest_version.outputs.latest_tag }} = v${{ steps.latest_version.outputs.latest_tag }} ]; then hub release delete ${{ steps.my_latest_version.outputs.latest_tag }}; fi
        hub release create -F "repo_tags.txt" "${assets[@]}" -m "Release v${{ steps.latest_version.outputs.latest_tag }}" "v${{ steps.latest_version.outputs.latest_tag }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
